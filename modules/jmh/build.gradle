plugins {
    id 'java'
    id 'application'
    id 'jvm-test-suite'
    id "org.sonarqube" version "4.4.1.3373"
    id 'jacoco'
}
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    flatDir {
        dirs("lib")
    }
}


dependencies {
    implementation fileTree(dir: './libs')
    testImplementation fileTree(dir: './libs')

}

application {
    mainClassName = "jsymbolic2.Main"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

sourceSets {
//    main.java.srcDirs = ['src']
    main.resources.srcDirs = []
    test.java.srcDirs = ['test/jsymbolic2/api', 'test/jsymbolic2/configuration',
                         'test/jsymbolic2/features', 'test/jsymbolic2/featureutils',
                         'test/jsymbolic2/processing', 'test/jsymbolic2/scenario']
    test.resources.srcDirs = []
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes "Main-Class": "jsymbolic2.Main"
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}


test {
    ignoreFailures = true
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    finalizedBy(jacocoTestReport)
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
        csv.required = false
    }
    dependsOn test // tests are required to run before generating the report
}
